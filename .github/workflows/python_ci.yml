name: Python CI

on:
  # Triggers the workflow on all push or pull request events
  push:
#    branches:
#      -some
  pull_request:
#    branches:
#      - wip

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron: "20 0 * * *"

env:
  CACHE_KEY_VER: v3
  PIP_CMD: python -m pip install --user

jobs:
  prepare-cache:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, ubuntu-22.04]
        python-version: ['3.10', '3.11']
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
      cache_key_base: ${{ env.CACHE_KEY_BASE }}
      cache_path: ${{ env.CACHE_PATH }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up env
        run: |
          ${{ env.PIP_CMD }} --upgrade pip
          echo "CACHE_PATH=`python -m site --user-site | sed 's|/lib/.*||'`" >> $GITHUB_ENV
          echo "CACHE_KEY_BASE=${{ env.CACHE_KEY_VER }}-${{ matrix.os }}-pip${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Cache pip packages
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ env.CACHE_KEY_BASE }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ env.CACHE_KEY_BASE }}-
          lookup-only: true

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ${{ env.PIP_CMD }} -r requirements.txt
          ${{ env.PIP_CMD }} flake8

  lint:
    needs: prepare-cache
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, ubuntu-22.04]
        python-version: ['3.10', '3.11']
    env:
      CACHE_KEY_BASE: ${{ needs.prepare-cache.outputs.cache_key_base }}
      CACHE_PATH: ${{ needs.prepare-cache.outputs.cache_path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore pip cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ env.CACHE_KEY_BASE }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ env.CACHE_KEY_BASE }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ${{ env.PIP_CMD }} --upgrade pip
          ${{ env.PIP_CMD }} -r requirements.txt
          ${{ env.PIP_CMD }} flake8

      - name: Lint with flake8
        run: |
          python scripts/flake8_baseline.py
